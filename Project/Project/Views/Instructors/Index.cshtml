@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<Project.Models.Instructor>

@{
    ViewData["Title"] = "Instructors";
}

<h1>Instructors</h1>
<hr />

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<!-- Filter Form -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Filter by name or department..." />
        <button type="submit" class="btn btn-outline-primary">Search</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
    </div>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Instructor Name</a>
            </th>
            <th>Salary</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DeptSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Department</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Salary)</td>
                <td>@Html.DisplayFor(modelItem => item.Department.Name)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="text-danger" onclick="return confirm('Are you sure you want to delete this instructor?');">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="mt-3">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"] }), new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
</div>

