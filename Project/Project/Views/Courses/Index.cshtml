@using X.PagedList.Mvc.Core
@using X.PagedList
@using Project.Controllers
@model IPagedList<Project.Models.Course>

@{
    ViewData["Title"] = "Courses";
    var joinedCourseIds = Context.Session.Get<List<int>>("JoinedCourses") ?? new List<int>();
}

<h1>Courses</h1>
<hr />

@if (User.IsInRole("Admin") || User.IsInRole("Instructor"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
}

<!-- Filter Form -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Filter by course name..." />
        <button type="submit" class="btn btn-outline-primary">Search</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
    </div>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Department</th>
            <th>Instructor</th>
            @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin") && !User.IsInRole("HR") && !User.IsInRole("Instructor"))
            {
                <th>Status</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Department.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Instructor.Name)</td>

                @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin") && !User.IsInRole("HR") && !User.IsInRole("Instructor"))
                {
                    <td>
                        @if (joinedCourseIds.Contains(item.Id))
                        {
                            <a asp-action="Leave" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Leave</a>
                        }
                        else
                        {
                            <a asp-action="Join" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success">Join</a>
                        }
                    </td>
                }

                <td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Instructor"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <span>|</span>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> <span>|</span>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="text-danger" onclick="return confirm('Are you sure?');">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="mt-3">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["CurrentFilter"] }))
</div>

